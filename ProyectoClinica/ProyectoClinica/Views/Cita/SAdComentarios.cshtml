@model IEnumerable<ProyectoClinica.Models.Comentario>
@{
    ViewBag.Title = "Gestión de Comentarios";
}

<link href="~/CSS/Comentarios.css" rel="stylesheet" />

<div style="text-align: center; margin-bottom: 20px;">
    <a href="@Url.Action("VistaCAdmin", "Cita")" class="custom-btn">
        <i class="fas fa-home"></i> Inicio
    </a>
</div>

<div class="comentarios-container">
    <div class="header-section">
        <h2>Gestión de Comentarios</h2>
        <a href="@Url.Action("SComentarios", "Cita")" class="btn-create">
            <i class="fas fa-plus-circle"></i> Crear Nuevo
        </a>
    </div>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert-success fade-in" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["Mensaje"]
        </div>
    }

    <div class="filtros-section">
        <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="searchComentarios" placeholder="Buscar comentario...">
        </div>
        <div class="dropdown-filter">
            <select id="estadoFilter">
                <option value="">Todos los estados</option>
                <option value="Aprobado">Aprobados</option>
                <option value="Pendiente">Pendientes</option>
                <option value="Rechazado">Rechazados</option>
            </select>
        </div>
    </div>

    <div class="comentarios-grid">
        @foreach (var item in Model)
        {
            <div class="comentario-card @(item.Estado_Comentario.Estado.ToLower())">
                <div class="comentario-header">
                    <div class="patient-info">
                        <i class="fas fa-user-circle"></i>
                        <span>@item.Atencion_Cliente.Comentarios_Paciente</span>
                    </div>
                    <div class="rating">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= item.Calificacion ? "active" : "")"></i>
                        }
                    </div>
                </div>
                <div class="comentario-body">
                    <p>@item.Comentario_Texto</p>
                </div>
                <div class="comentario-footer">
                    <div class="date">
                        <i class="far fa-calendar-alt"></i>
                        <span>@item.Fecha.ToString("dd/MM/yyyy")</span>
                    </div>
                    <div class="badges">
                        <span class="badge badge-@(item.Estado_Comentario.Estado.ToLower())">
                            @item.Estado_Comentario.Estado
                        </span>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="no-records">
            <i class="fas fa-comment-slash"></i>
            <p>No hay comentarios para mostrar</p>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchComentarios');
        if (searchInput) {
            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase();
                const cards = document.querySelectorAll('.comentario-card');

                cards.forEach(card => {
                    const text = card.querySelector('.comentario-body p').textContent.toLowerCase();
                    const patient = card.querySelector('.patient-info span').textContent.toLowerCase();

                    if (text.includes(searchTerm) || patient.includes(searchTerm)) {
                        card.style.display = '';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }

        const estadoFilter = document.getElementById('estadoFilter');
        if (estadoFilter) {
            estadoFilter.addEventListener('change', function () {
                const selectedValue = this.value.toLowerCase();
                const cards = document.querySelectorAll('.comentario-card');

                cards.forEach(card => {
                    const estado = card.querySelector('.badge').textContent.trim().toLowerCase();

                    if (!selectedValue || estado === selectedValue) {
                        card.style.display = '';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }

        const alertMessage = document.querySelector('.alert-success');
        if (alertMessage) {
            setTimeout(() => {
                alertMessage.style.opacity = '0';
                alertMessage.style.height = '0';
                alertMessage.style.padding = '0';
                alertMessage.style.margin = '0';
                alertMessage.style.overflow = 'hidden';
                alertMessage.style.transition = 'all 0.5s ease';
            }, 5000);
        }
    });
</script>