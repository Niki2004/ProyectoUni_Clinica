@model IEnumerable<ProyectoClinica.Models.Comentario>
@{
    ViewBag.Title = "Gestión de Comentarios";
}

<link href="~/CSS/Comentarios.css" rel="stylesheet" />

<style>
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

        .pagination button {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            color: #007bff;
            padding: 10px 15px;
            margin: 0 5px;
            cursor: pointer;
            font-size: 16px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

            .pagination button.active {
                background-color: #007bff;
                color: white;
            }

            .pagination button:hover {
                background-color: #e2e6ea;
            }

            .pagination button:disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }
</style>

<div style="text-align: center; margin-bottom: 20px;">
    <a href="@Url.Action("VistaCAdmin", "Cita")" class="custom-btn">
        <i class="fas fa-home"></i> Inicio
    </a>
</div>

<div class="comentarios-container">
    <div class="header-section">
        <h2>Gestión de Comentarios</h2>
        <a href="@Url.Action("SComentarios", "Cita")" class="btn-create">
            <i class="fas fa-plus-circle"></i> Crear Nuevo
        </a>
    </div>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert-success fade-in" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["Mensaje"]
        </div>
    }

    <div class="filtros-section">
        <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="searchComentarios" placeholder="Buscar comentario...">
        </div>
        <div class="dropdown-filter">
            <select id="estadoFilter">
                <option value="">Todos los estados</option>
                <option value="Aprobado">Aprobados</option>
                <option value="Pendiente">Pendientes</option>
                <option value="Rechazado">Rechazados</option>
            </select>
        </div>
    </div>

    <div class="comentarios-grid" id="comentariosList">
        @foreach (var item in Model)
        {
            <div class="comentario-card @(item.Estado_Comentario.Estado.ToLower())">
                <div class="comentario-header">
                    <div class="patient-info">
                        <i class="fas fa-user-circle"></i>
                        <span>@item.Atencion_Cliente.Comentarios_Paciente</span>
                    </div>
                    <div class="rating">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= item.Calificacion ? "active" : "")"></i>
                        }
                    </div>
                </div>
                <div class="comentario-body">
                    <p>@item.Comentario_Texto</p>
                </div>
                <div class="comentario-footer">
                    <div class="date">
                        <i class="far fa-calendar-alt"></i>
                        <span>@item.Fecha.ToString("dd/MM/yyyy")</span>
                    </div>
                    <div class="badges">
                        <span class="badge badge-@(item.Estado_Comentario.Estado.ToLower())">
                            @item.Estado_Comentario.Estado
                        </span>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="no-records">
            <i class="fas fa-comment-slash"></i>
            <p>No hay comentarios para mostrar</p>
        </div>
    }

    <!-- Paginado -->
    <div id="paginationControls" class="pagination">
        <!-- Aquí se agregarán los controles de paginación -->
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const comentariosList = document.getElementById('comentariosList');
        const comments = Array.from(comentariosList.querySelectorAll('.comentario-card'));
        const commentsPerPage = 5;  // Cantidad de comentarios por página
        const totalPages = Math.ceil(comments.length / commentsPerPage);
        let currentPage = 1;

        function showPage(page) {
            const startIndex = (page - 1) * commentsPerPage;
            const endIndex = page * commentsPerPage;

            // Ocultar todos los comentarios
            comments.forEach((comment, index) => {
                if (index >= startIndex && index < endIndex) {
                    comment.style.display = '';
                } else {
                    comment.style.display = 'none';
                }
            });

            // Actualizar controles de paginación
            updatePaginationControls(page);
        }

        function updatePaginationControls(page) {
            const paginationControls = document.getElementById('paginationControls');
            paginationControls.innerHTML = '';

            const prevButton = document.createElement('button');
            prevButton.textContent = 'Anterior';
            prevButton.disabled = page === 1;
            prevButton.addEventListener('click', () => showPage(page - 1));

            const nextButton = document.createElement('button');
            nextButton.textContent = 'Siguiente';
            nextButton.disabled = page === totalPages;
            nextButton.addEventListener('click', () => showPage(page + 1));

            paginationControls.appendChild(prevButton);

            for (let i = 1; i <= totalPages; i++) {
                const pageButton = document.createElement('button');
                pageButton.textContent = i;
                pageButton.classList.toggle('active', i === page);
                pageButton.addEventListener('click', () => showPage(i));
                paginationControls.appendChild(pageButton);
            }

            paginationControls.appendChild(nextButton);
        }

        // Inicializar la primera página
        showPage(currentPage);

        // Filtro de búsqueda
        const searchInput = document.getElementById('searchComentarios');
        if (searchInput) {
            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase();
                const filteredComments = comments.filter(card => {
                    const text = card.querySelector('.comentario-body p').textContent.toLowerCase();
                    const patient = card.querySelector('.patient-info span').textContent.toLowerCase();
                    return text.includes(searchTerm) || patient.includes(searchTerm);
                });

                // Mostrar solo los comentarios filtrados
                comments.forEach(comment => {
                    comment.style.display = filteredComments.includes(comment) ? '' : 'none';
                });

                // Actualizar la paginación
                totalPages = Math.ceil(filteredComments.length / commentsPerPage);
                showPage(1);  // Volver a la primera página
            });
        }

        // Filtro de estado
        const estadoFilter = document.getElementById('estadoFilter');
        if (estadoFilter) {
            estadoFilter.addEventListener('change', function () {
                const selectedValue = this.value.toLowerCase();
                const filteredComments = comments.filter(card => {
                    const estado = card.querySelector('.badge').textContent.trim().toLowerCase();
                    return !selectedValue || estado === selectedValue;
                });

                // Mostrar solo los comentarios filtrados
                comments.forEach(comment => {
                    comment.style.display = filteredComments.includes(comment) ? '' : 'none';
                });

                // Actualizar la paginación
                totalPages = Math.ceil(filteredComments.length / commentsPerPage);
                showPage(1);  // Volver a la primera página
            });
        }
    });
</script>
