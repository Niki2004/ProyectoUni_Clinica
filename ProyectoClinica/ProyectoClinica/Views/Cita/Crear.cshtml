@model ProyectoClinica.Models.Cita

@{
    ViewBag.Title = "Agendar una cita";
}

<link rel="stylesheet" href="~/CSS/Crear.css" />

<div class="container-form">
    <h2 class="page-title">Agendar una cita</h2>


    @using (Html.BeginForm("Crear", "Cita", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-section">
            <legend>Información del Médico</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Id_Medico, "Médico", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Id_Medico, (SelectList)ViewBag.IdMedico, "Seleccione un Médico", new { @class = "form-control", id = "Id_Medico" })
                    @Html.ValidationMessageFor(model => model.Id_Medico, "", new { @class = "text-danger" })
                </div>

                <br />

                <div class="form-group">
                    @Html.Label("Especialidad", "Especialidad")
                    <input type="text" id="Especialidad" class="form-control" readonly />
                </div>
            </div>
              </div>
            <br />

            <div class="form-section">
                <legend>Información del Paciente</legend>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre_Paciente, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Nombre_Paciente, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre_Paciente, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descripcion_Complicaciones, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Descripcion_Complicaciones, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion_Complicaciones, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sintomas, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Sintomas, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Sintomas, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-section">
                <legend>Datos de la Cita</legend>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Fecha_Cita, "Fecha de la cita")
                            @Html.TextBoxFor(model => model.Fecha_Cita, new
                            {
                                @class = "form-control",
                                @type = "date",
                                @min = DateTime.Today.ToString("yyyy-MM-dd"),
                                @id = "Fecha_Cita"
                            })
                            @Html.ValidationMessageFor(model => model.Fecha_Cita, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Hora_cita, new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Hora_cita, new
                            {@class = "form-control", @type = "time", @min = "07:00", @max = "20:00"})
                            @Html.ValidationMessageFor(model => model.Hora_cita, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Modalidad, "Modalidad de la Cita")
                            @Html.DropDownListFor(model => model.Modalidad, new SelectList(new[] { "Presencial", "Virtual" }, "Seleccione la modalidad"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Modalidad, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    @Html.HiddenFor(model => model.Estado_Asistencia, new { @Value = "Asistida" })

                </div>
            </div>

                <div class="form-group text-center">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    <a href="@Url.Action("Index", "Cita")" class="btn btn-secondary">Regresar</a>
                </div>

                }

                @section Scripts {
                    <script>
                        $(document).ready(function () {
                            $("#Id_Medico").change(function () {
                                var idMedico = $(this).val();

                                if (idMedico) {
                                    $.ajax({
                                        url: '/Cita/GetEspecialidadPorMedico',
                                        type: 'GET',
                                        data: { idMedico: idMedico },
                                        success: function (response) {
                                            if (response.success) {
                                                $("#Especialidad").val(response.especialidad);
                                            } else {
                                                $("#Especialidad").val(response.message || "Especialidad no encontrada");
                                            }
                                        },
                                        error: function () {
                                            alert("Ocurrió un error al obtener la especialidad.");
                                        }
                                    });
                                } else {
                                    $("#Especialidad").val("");
                                }
                            });
                        });;

                        document.getElementById('Fecha_Cita').addEventListener('change', function () {
                            const fecha = new Date(this.value);
                            const dia = fecha.getUTCDay(); // 0 = domingo, 6 = sábado

                            if (dia === 0 || dia === 6) {
                                alert("No se pueden agendar citas los sábados ni domingos.");
                                this.value = "";
                            }
                        });
                    </script>
                }
            </div>
