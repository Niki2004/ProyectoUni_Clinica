@model ProyectoClinica.Models.Inventario

@{
    ViewBag.Title = "Crear Inventario";
}
<link href="~/CSS/Crear.css" rel="stylesheet" />
<div class="container-form">
    <h2 class="page-title">Crear Inventario</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-section">
            <legend>Información del Artículo</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.NombreArticulo, "Nombre del Artículo", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.NombreArticulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreArticulo, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Marca, "Marca", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TipoArticulo, "Tipo de Artículo", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.DropDownListFor(model => model.TipoArticulo,
                        new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Equipo Médico", Value = "Equipo Médico" },
                            new SelectListItem { Text = "Medicamento", Value = "Medicamento" },
                            new SelectListItem { Text = "Suministro", Value = "Suministro" }
                        },
                        "Seleccione una opción",
                        new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoArticulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-section">
            <legend>Detalles del Inventario</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Cantidad, "Cantidad", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PrecioUnitario, "Precio Unitario", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.PrecioUnitario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrecioUnitario, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FechaCaducidad, "Fecha de Caducidad", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.TextBoxFor(model => model.FechaCaducidad, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.FechaCaducidad, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Id_Estado, "Estado", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.DropDownList("Id_Estado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="text-center" style="margin-top: 20px;">
            <input type="submit" value="Guardar" class="btn-primary" />
            @Html.ActionLink("Regresar a la Lista", "Index", null, new { @class = "btn-secondary" })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}