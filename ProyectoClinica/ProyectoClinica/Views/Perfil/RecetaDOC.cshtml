@model ProyectoClinica.Models.Modificacion_Receta

@{
    ViewBag.Title = "Modificar Receta";
}

<div class="text-center">
    <img src="~/Imagenes/Logo.png" alt="Centro Integral Santo Domingo" class="img-fluid mb-3" style="opacity: 0.10;">
</div>

@using (Html.BeginForm("RecetaDOC", "Perfil", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
        <!-- Card Container -->
        <div class="card" style="width: 400px;">
            <div class="card-header text-center" style="background-color: #0b7b82; color: white;">
                <h5>@ViewBag.Title</h5>
            </div>
            <div class="card-body">

                <!-- Form Group: Selección de Receta -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Id_receta, "Seleccionar Receta")
                    @Html.DropDownListFor(model => model.Id_receta, (SelectList)ViewBag.Id_Receta, "Seleccionar Receta", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Id_receta, "", new { @class = "text-danger" })
                </div>
                <br />

                <!-- Form Group: Fecha -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Fecha_Modificacion, "Fecha")
                    @Html.TextBoxFor(model => model.Fecha_Modificacion, new
                    {
                        @class = "form-control",
                        @type = "date",
                        @min = DateTime.Today.ToString("yyyy-MM-dd"),
                        @id = "Fecha_Cita"
                    })                    @Html.ValidationMessageFor(model => model.Fecha_Modificacion, "", new { @class = "text-danger" })
                </div>
                <br />

                <!-- Form Group: Consentimiento -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Consentimiento)
                    @Html.DropDownListFor(model => model.Consentimiento, new SelectList(new[] { "Aprobado", "Negado" }), "Seleccionar Consentimiento", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Consentimiento)
                </div>
                <br />

                <!-- Form Group: Motivo de modificación -->
                <div class="form-group">
                    @Html.LabelFor(model => model.motivo_modificacion)
                    @Html.TextAreaFor(model => model.motivo_modificacion, new { @class = "form-control", rows = 3 })
                    @Html.ValidationMessageFor(model => model.motivo_modificacion)
                </div>
                <br />

                <!-- Submit Button -->
                <div class="form-group text-center">
                    <button type="submit" class="btn" style="background-color: #0b7b82; color: white; width: 45%;">Guardar</button>
                    <button type="button" class="btn btn-secondary" style="width: 45%; margin-left: 10px;" onclick="window.location.href='@Url.Action("ConcenReceta", "Perfil")'">Volver</button>
                </div>

            </div>
        </div>
    </div>
}
@section Scripts {
    <script>
        $(document).ready(function () {
            $("#Id_Medico").change(function () {
                var idMedico = $(this).val();

                if (idMedico) {
                    $.ajax({
                        url: '/Cita/GetEspecialidadPorMedico',
                        type: 'GET',
                        data: { idMedico: idMedico },
                        success: function (response) {
                            if (response.success) {
                                $("#Especialidad").val(response.especialidad);
                            } else {
                                $("#Especialidad").val(response.message || "Especialidad no encontrada");
                            }
                        },
                        error: function () {
                            alert("Ocurrió un error al obtener la especialidad.");
                        }
                    });
                } else {
                    $("#Especialidad").val("");
                }
            });
        });;

        document.getElementById('Fecha_Cita').addEventListener('change', function () {
            const fecha = new Date(this.value);
            const dia = fecha.getUTCDay(); // 0 = domingo, 6 = sábado

            if (dia === 0 || dia === 6) {
                alert("No se pueden agendar citas los sábados ni domingos.");
                this.value = "";
            }
        });
    </script>
}