@model IEnumerable<ProyectoClinica.Models.Nota_Paciente>

@{
    ViewBag.Title = "Notas Personales";
}

<link href="~/CSS/VistaCIta.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-between align-items-center">
            <h2 class="text-center flex-grow-1 mb-0 medical-title">Notas Personales</h2>
            <a href="@Url.Action("Index", "Perfil")" class="btn custom-medical-btn">
                <i class="fas fa-home me-2"></i>Inicio
            </a>
        </div>
    </div>

    @* Mensajes de notificación *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-medical-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-medical-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card medical-appointment-card">
                    <div class="card-header medical-card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="appointment-header-title">
                                <i class="fas fa-calendar-alt me-2"></i>Nota Personal
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-12">
                                <div class="medical-info-row">
                                 <div class="medical-info-content">
                                     <i class="fas fa-file-alt" style="color: #ACC196; margin-right: 5px;"></i> <span class="medical-info-label">Descripción:</span>
                                      @item.Nota_Del_Paciente
                                 </div>
                                </div>
                               
                            </div>
                        </div>
                    </div>
                    <div class="card-footer medical-card-footer">
                        <a href="@Url.Action("EditarNota", "Perfil", new { id = item.Id_Nota_Paciente })"
                           class="btn btn-medical-edit me-2"
                           data-bs-toggle="tooltip"
                           title="Editar Nota">
                            <i class="fas fa-edit me-2"></i>Editar
                        </a>

                        @using (Html.BeginForm("EliminarNota", "Perfil", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", item.Id_Nota_Paciente)

                            <button type="submit" class="btn btn-medical-delete" data-bs-toggle="tooltip" title="Eliminar Nota">
                                <i class="fas fa-trash-alt"></i> Eliminar
                            </button>
                        }
                    </div>

                </div>
            </div>
        }

        @* No hay notas *@
        @if (!Model.Any())
        {
            <div class="text-center mt-5 medical-empty-state">
                <i class="fas fa-inbox fa-4x mb-3"></i>
                <h4>No hay notas personales registradas</h4>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    });
</script>
