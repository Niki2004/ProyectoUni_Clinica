@model ProyectoClinica.Models.AsignacionRolesTemporales

@{
    ViewBag.Title = "vistaRolEditarExp";
}

<link href="~/CSS/Editar.css" rel="stylesheet" />
<link href="~/CSS/VistaGeneral.css" rel="stylesheet" />
<link rel="stylesheet" href="~/CSS/Crear.css" />
<body>
    <div class="container-fluid">
        <!-- Contenedor de notificaciones -->
        <div id="notificationContainer" class="notification-container"></div>

        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 col-lg-2 sidebar">
                <div class="sidebar">
                    <div class="p-3 d-flex justify-content-center">
                        <img src="~/Imagenes/Logo.png" alt="Centro Integral Santo Domingo Logo" class="img-fluid" style="max-width: 195px; height: auto;" />
                    </div>

                    <center><div class="nav-header">Plataforma</div></center>
                    <div class="nav-item">
                        <a class="nav-link">
                            <div>
                                Navegación
                            </div>
                        </a>
                        <ul class="submenu">
                            <br />
                            <a href="@Url.Action("Index", "Inventario")" class="nav-link">
                                <i class="fas fa-boxes"></i> Inventario
                            </a>
                            <br />
                            <a href="@Url.Action("VistaCON", "Contabilidad")" class="nav-link">
                                <i class="fas fa-calculator"></i> Contabilidad
                            </a>
                            <br />
                            <a href="@Url.Action("VistaAdmRep", "Reporte")" class="nav-link">
                                <i class="fas fa-chart-line"></i> Reportes
                            </a>
                        </ul>
                    </div>

                    <hr />

                    <div class="nav-item">
                        <a class="nav-link">
                            <div>
                                Administración
                            </div>
                        </a>
                        <ul class="submenu">
                            <a href="@Url.Action("Administrativo", "Administrativos")" class="nav-link">
                                <i class="fas fa-user-tie"></i> Administrativo
                            </a>
                            <br />
                            <a href="@Url.Action("Empleados", "Empleados")" class="nav-link">
                                <i class="fas fa-users"></i> Empleados
                            </a>
                            <br />
                            <a href="@Url.Action("Expedientes", "Expedientes")" class="nav-link">
                                <i class="fas fa-folder-open"></i> Expedientes
                            </a>
                            <br />
                            <a href="@Url.Action("VistaCAdmin", "Cita")" class="nav-link">
                                <i class="fas fa-calendar-check"></i> Citas
                            </a>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9 col-lg-10 ms-auto button-container">
                <div class="container-form">
                    <h2 class="page-title">Editar Asignación de Roles Temporales</h2>

                    @using (Html.BeginForm("EditAsignacionRol", "Empleados", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id_AsignacionRoles)

                        <div class="form-section">
                            <legend>Información del Usuario</legend>
                            <div class="detail-group">
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Id, "Usuario")</div>
                                    <div class="detail-value">
                                        @Html.DropDownList("Id", null, "Seleccione un usuario", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Id_Usuario, "Usuario Asignado")</div>
                                    <div class="detail-value">
                                        @Html.DropDownList("Id_Usuario", null, "Seleccione un usuario", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Id_Usuario, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Id_Departamento, "Departamento")</div>
                                    <div class="detail-value">
                                        @Html.DropDownList("Id_Departamento", null, "Seleccione un departamento", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Id_Departamento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-section">
                            <legend>Fechas de Asignación</legend>
                            <div class="detail-group">
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Fecha_Inicio, "Fecha de Inicio")</div>
                                    <div class="detail-value">
                                        @Html.TextBoxFor(model => model.Fecha_Inicio, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Fecha_Inicio, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Fecha_Fin, "Fecha Final")</div>
                                    <div class="detail-value">
                                        @Html.TextBoxFor(model => model.Fecha_Fin, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Fecha_Fin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-section">
                            <legend>Detalles Adicionales</legend>
                            <div class="detail-group">
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Estado, "Estado")</div>
                                    <div class="detail-value">
                                        @Html.DropDownListFor(model => model.Estado,
                                            new SelectList(new[] { "Activo", "Inactivo" }),
                                            "Seleccione un estado",
                                            new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">@Html.LabelFor(model => model.Motivo, "Motivo")</div>
                                    <div class="detail-value">
                                        @Html.TextAreaFor(model => model.Motivo, new { @class = "form-control", rows = "3", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Motivo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="text-center" style="margin-top: 20px;">
                            <input type="submit" value="Guardar" class="btn-primary" style="margin-right: 10px;" />
                            @Html.ActionLink("Regresar a la lista", "vistaRolExpedienteExp", null, new { @class = "btn-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Función para mostrar notificaciones
        function showNotification(message, type) {
            const notificationContainer = document.getElementById('notificationContainer');
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <div class="notification-header">
                    <h5 class="notification-title">
                        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                        ${type === 'success' ? 'Éxito' : 'Error'}
                    </h5>
                    <button class="notification-close">&times;</button>
                </div>
                <div class="notification-body">
                    ${message}
                </div>
            `;

            notificationContainer.appendChild(notification);

            // Eliminar la notificación después de 5 segundos
            setTimeout(() => {
                notification.remove();
            }, 5000);
        }

        // Manejar el cierre de notificaciones
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('notification-close')) {
                e.target.closest('.notification').remove();
            }
        });

        // Toggle submenu functionality
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', function () {
                const submenu = this.nextElementSibling;
                if (submenu) {
                    submenu.classList.toggle('active');
                    this.classList.toggle('active');
                }
            });
        });
    </script>
</body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

