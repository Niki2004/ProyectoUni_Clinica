@model IEnumerable<ProyectoClinica.Models.Cita>

@{
    ViewBag.Title = "Historial de Expedientes";
}

<html lang="es">
<head>
    <meta charset="UTF-8" />
    <title>Historial de Expedientes</title>
    <link href="~/CSS/Administrativo.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
</head>
<body>
    <div class="page-container">
        <div class="header-container">
            <div style="display: flex; align-items: center; justify-content: space-between; width: 100%;">
                <a href="@Url.Action("Expedientes", "Expedientes")" class="btn-inicio">
                    <i class="fas fa-home"></i> Inicio
                </a>
                <div class="page-title-container">
                    <h1 class="page-title">Historial de Expedientes</h1>
                </div>
            </div>
        </div>

        <div class="results-panel mt-4">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="result-title"><i class="fas fa-folder-open"></i> Expedientes Registrados</h2>
                <button class="btn btn-danger" onclick="descargarPDF()">
                    <i class="fas fa-file-pdf"></i> Descargar PDF
                </button>
            </div>

            <div class="table-responsive">
                <table id="expedientesTable" class="table table-striped table-bordered text-center align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>Médico</th>
                            <th>Paciente</th>
                            <th>Estado</th>
                            <th>Hora</th>
                            <th>Complicaciones</th>
                            <th>Síntomas</th>
                            <th>Fecha</th>
                            <th>Modalidad</th>
                        </tr>
                    </thead>
                    <tbody id="comentariosBody">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Medico.Nombre</td>
                                <td>@item.Nombre_Paciente</td>
                                <td>@item.Estado_Asistencia</td>
                                <td>@item.Hora_cita</td>
                                <td>@item.Descripcion_Complicaciones</td>
                                <td>@item.Sintomas</td>
                                <td>@item.Fecha_Cita.ToString("dd/MM/yyyy")</td>
                                <td>@item.Modalidad</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div id="paginationContainer" class="d-flex justify-content-center mt-3"></div>
            </div>
        </div>
    </div>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- DataTables -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <!-- jsPDF y autoTable -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

    <script>
        $(document).ready(function () {
            var rowsPerPage = 5;
            var $rows = $("#comentariosBody tr");
            var totalPages = Math.ceil($rows.length / rowsPerPage);
            var currentPage = 1;

            function showPage(page) {
                var start = (page - 1) * rowsPerPage;
                var end = start + rowsPerPage;
                $rows.hide().slice(start, end).show();
                $("#paginationContainer").html(createPagination(page, totalPages));
            }

            function createPagination(page, total) {
                var pagination = `<nav><ul class="pagination">`;
                if (page > 1) {
                    pagination += `<li class="page-item"><a href="#" class="page-link" data-page="${page - 1}">«</a></li>`;
                }
                for (var i = 1; i <= total; i++) {
                    pagination += `<li class="page-item ${i === page ? 'active' : ''}">
                                             <a href="#" class="page-link" data-page="${i}">${i}</a>
                                        </li>`;
                }
                if (page < total) {
                    pagination += `<li class="page-item"><a href="#" class="page-link" data-page="${page + 1}">»</a></li>`;
                }
                pagination += `</ul></nav>`;
                return pagination;
            }

            $(document).on("click", ".page-link", function (e) {
                e.preventDefault();
                var page = $(this).data("page");
                showPage(page);
            });

            showPage(currentPage);
        });

        $(document).ready(function () {
            $('#expedientesTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });
        });

        function descargarPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF('l', 'mm', 'a4'); // Cambiado a formato horizontal para más espacio

            // Configuración de colores moderna
            const primaryColor = [41, 128, 185]; // Azul moderno
            const accentColor = [26, 188, 156]; // Verde turquesa
            const textColor = [44, 62, 80]; // Azul oscuro para texto
            const lightGray = [189, 195, 199]; // Gris claro
            const darkGray = [127, 140, 141]; // Gris oscuro

            // Dimensiones y márgenes
            const margin = 10;
            const pageWidth = doc.internal.pageSize.width;
            const pageHeight = doc.internal.pageSize.height;
            const contentWidth = pageWidth - (margin * 2);

            // Función para dibujar el encabezado en cada página
            function drawHeader() {
                // Fondo de encabezado con degradado
                const grd = doc.setGState(doc.GState({ opacity: 0.8 }));
                doc.setFillColor(primaryColor[0], primaryColor[1], primaryColor[2]);
                doc.roundedRect(margin, margin, contentWidth, 20, 3, 3, 'F');

                // Logo (simulado con un círculo)
                doc.setFillColor(accentColor[0], accentColor[1], accentColor[2]);
                doc.circle(margin + 10, margin + 10, 7, 'F');

                // Título principal
                doc.setFont("helvetica", "bold");
                doc.setFontSize(18);
                doc.setTextColor(255, 255, 255);
                doc.text("Centro Integral Santo Domingo", margin + 25, margin + 12);

                // Subtítulo
                doc.setFont("helvetica", "normal");
                doc.setFontSize(12);
                doc.setTextColor(255, 255, 255);
                doc.text("Historial de Expedientes Médicos", pageWidth - margin - 60, margin + 12);

                // Fecha y hora
                const fecha = new Date().toLocaleDateString('es-ES', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
                const hora = new Date().toLocaleTimeString('es-ES', {
                    hour: '2-digit',
                    minute: '2-digit'
                });

                doc.setFontSize(9);
                doc.setFont("helvetica", "italic");
                doc.setTextColor(textColor[0], textColor[1], textColor[2]);
                doc.text(`Generado: ${fecha} a las ${hora}`, pageWidth - margin, pageHeight - margin, { align: 'right' });
            }

            // Función para dibujar el pie de página en cada página
            function drawFooter(pageNumber, totalPages) {
                // Línea decorativa
                doc.setDrawColor(accentColor[0], accentColor[1], accentColor[2]);
                doc.setLineWidth(0.5);
                doc.line(margin, pageHeight - margin - 8, pageWidth - margin, pageHeight - margin - 8);

                // Información de página
                doc.setFontSize(8);
                doc.setFont("helvetica", "normal");
                doc.setTextColor(darkGray[0], darkGray[1], darkGray[2]);
                doc.text(`Página ${pageNumber} de ${totalPages}`, margin, pageHeight - margin - 3);

                // Texto de derechos
                doc.text("© Centro Integral Santo Domingo - Todos los derechos reservados", pageWidth / 2, pageHeight - margin - 3, { align: 'center' });
            }

            // Obtener los datos de la tabla
            const tableData = [];
            const headers = [];

            // Extraer encabezados
            $('#expedientesTable thead th').each(function () {
                headers.push($(this).text().trim());
            });

            // Extraer datos
            $('#expedientesTable tbody tr').each(function () {
                const rowData = [];
                $(this).find('td').each(function () {
                    rowData.push($(this).text().trim());
                });
                tableData.push(rowData);
            });

            // Dibuja el encabezado de la primera página
            drawHeader();

            // Configuración de la tabla con autoTable
            doc.autoTable({
                startY: margin + 25,
                head: [headers],
                body: tableData,
                theme: 'grid',
                styles: {
                    fontSize: 9,
                    cellPadding: 3,
                    textColor: textColor,
                    lineColor: lightGray,
                    lineWidth: 0.1,
                    font: 'helvetica',
                },
                headStyles: {
                    fillColor: primaryColor,
                    textColor: [255, 255, 255],
                    fontSize: 10,
                    fontStyle: 'bold',
                    cellPadding: 4,
                    halign: 'center',
                    valign: 'middle'
                },
                alternateRowStyles: {
                    fillColor: [240, 248, 255] // Azul muy claro
                },
                margin: {
                    top: margin + 25,
                    left: margin,
                    right: margin,
                    bottom: margin + 10
                },
                columnStyles: {
                    0: { cellWidth: 30 }, // Médico
                    1: { cellWidth: 30 }, // Paciente
                    2: { cellWidth: 20 }, // Estado
                    3: { cellWidth: 15 }, // Hora
                    4: { cellWidth: 45 }, // Complicaciones (más ancho para textos largos)
                    5: { cellWidth: 40 }, // Síntomas (más ancho para textos largos)
                    6: { cellWidth: 20 }, // Fecha
                    7: { cellWidth: 20 }  // Modalidad
                },
                didDrawPage: function (data) {
                    // Dibujar encabezado y pie de página en cada página
                    if (data.pageNumber > 1) {
                        drawHeader();
                    }
                    drawFooter(data.pageNumber, data.pageCount);
                },
                // Personalización de celdas para un aspecto moderno
                didDrawCell: function (data) {
                    // Dar un estilo redondeado a las celdas
                    if (data.row.section === 'head') {
                        const x = data.cell.x;
                        const y = data.cell.y;
                        const w = data.cell.width;
                        const h = data.cell.height;

                        // Añadir un ligero sombreado a las celdas de encabezado
                        doc.setDrawColor(darkGray[0], darkGray[1], darkGray[2]);
                        doc.setLineWidth(0.1);
                        doc.line(x, y + h, x + w, y + h);
                    }

                    // Mejorar la visualización del contenido de las celdas
                    if (data.column.index === 4 || data.column.index === 5) {
                        // Complicaciones y Síntomas: texto justificado para mejor lectura
                        data.cell.styles.halign = 'left';
                    } else {
                        // Resto de columnas: texto centrado
                        data.cell.styles.halign = 'center';
                    }
                },
                // Personalización para celdas con valores específicos
                willDrawCell: function (data) {
                    // Destacar estados específicos (por ejemplo, "Atendido" o "Cancelado")
                    if (data.row.section === 'body' && data.column.index === 2) {
                        const estado = data.cell.text[0];
                        if (estado === 'Atendido') {
                            data.cell.styles.fillColor = [213, 245, 227]; // Verde claro
                            data.cell.styles.textColor = [24, 106, 59]; // Verde oscuro
                        } else if (estado === 'Cancelado') {
                            data.cell.styles.fillColor = [253, 237, 237]; // Rojo claro
                            data.cell.styles.textColor = [185, 28, 28]; // Rojo oscuro
                        } else if (estado === 'Pendiente') {
                            data.cell.styles.fillColor = [254, 252, 232]; // Amarillo claro
                            data.cell.styles.textColor = [133, 77, 14]; // Marrón
                        }
                    }
                }
            });

            // Añadir un resumen al final del documento
            const finalY = doc.lastAutoTable.finalY || 150;

            if (finalY + 40 > pageHeight - margin) {
                doc.addPage();
                drawHeader();
                drawFooter(doc.internal.getNumberOfPages(), doc.internal.getNumberOfPages());
            }

            // Añadir información de resumen
            doc.setFillColor(245, 247, 250); // Fondo gris muy claro
            doc.roundedRect(margin, finalY + 10, contentWidth, 30, 3, 3, 'F');

            doc.setFont("helvetica", "bold");
            doc.setFontSize(12);
            doc.setTextColor(primaryColor[0], primaryColor[1], primaryColor[2]);
            doc.text("Resumen del Informe", margin + 5, finalY + 20);

            doc.setFont("helvetica", "normal");
            doc.setFontSize(10);
            doc.setTextColor(textColor[0], textColor[1], textColor[2]);
            doc.text(`Total de expedientes: ${tableData.length}`, margin + 5, finalY + 30);

            // Añadir información de contacto
            doc.setFillColor(accentColor[0], accentColor[1], accentColor[2], 0.1);
            doc.roundedRect(pageWidth - margin - 80, finalY + 10, 80, 30, 3, 3, 'F');

            doc.setFont("helvetica", "bold");
            doc.setFontSize(9);
            doc.setTextColor(accentColor[0], accentColor[1], accentColor[2]);
            doc.text("Contacto", pageWidth - margin - 75, finalY + 20);

            doc.setFont("helvetica", "normal");
            doc.setFontSize(8);
            doc.setTextColor(textColor[0], textColor[1], textColor[2]);
            doc.text("Centro Integral Santo Domingo", pageWidth - margin - 75, finalY + 26);
            doc.text("Tel: (XXX) XXX-XXXX", pageWidth - margin - 75, finalY + 31);
            doc.text("Email: info@centrosd.com", pageWidth - margin - 75, finalY + 36);

            // Guardar el PDF
            doc.save("Historial_Expedientes_Completo.pdf");
        }
    </script>
</body>
</html>